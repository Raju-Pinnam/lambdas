AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  License: Apache-2.0
Description: "AWS CloudFormation Template for the guardtrac"
Parameters:
  RajuLambdaRoleARN:
    Description: "Role for Lambda"
    Type: String
Resources:
  LambdaFunction1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: lambda-cloudfs-bucket-raju
        S3Key: "functions/lambda_3.zip"
      FunctionName: "lambda_1"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 1024
      Role: !Ref RajuLambdaRoleARN
      Runtime: python3.10
      Timeout: 300
      Environment:
        Variables:
          v1: hee
          v2: "hello"
      VpcConfig:
        SecurityGroupIds:
          - sg-0b4da5272222e9a41
        SubnetIds:
          - subnet-0b4e5aa2ed46c7c6c
          - subnet-02eecfd020164881b
          - subnet-0106a0d39eddfc465
  LambdaFunction2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: lambda-cloudfs-bucket-raju
        S3Key: "functions/lambda_4.zip"
      FunctionName: "lambda_2"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 1024
      Role: !Ref RajuLambdaRoleARN
      Runtime: python3.10
      Timeout: 100
      Environment:
        Variables:
          v1: hee
          v2: "hello"
      VpcConfig:
        SecurityGroupIds:
          - sg-0b4da5272222e9a41
        SubnetIds:
          - subnet-0b4e5aa2ed46c7c6c
          - subnet-02eecfd020164881b
          - subnet-0106a0d39eddfc465
Outputs:
  LambdaFunction1ARN:
    Value: !GetAtt "LambdaFunction1.Arn"
    Export:
      Name: "LambdaFunction1ARN::Id"
  LambdaFunction2ARN:
    Value: !GetAtt "LambdaFunction2.Arn"
    Export:
      Name: "LambdaFunction2ARN::Id"
